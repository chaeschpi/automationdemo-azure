name: 'Deploy'
 
on:
  push:
    branches:
    - master
  pull_request:
    types: [assigned, opened, synchronize, reopened]

jobs:
  terraform:
    name: 'Deploy'
    env:
      ARM_CLIENT_ID: ${{ secrets.AZURE_AD_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.AZURE_AD_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.AZURE_AD_TENANT_ID }}
      TF_VAR_appId: ${{ secrets.AZURE_AD_CLIENT_ID }}
      TF_VAR_password: ${{ secrets.AZURE_AD_CLIENT_SECRET }}
      TF_ACTIONS_WORKING_DIR: "./terraform"
      FLUX_GITHUB_USER: "tuxpeople"
      FLUX_GITHUB_REPO: "k8s-server"
      FLUX_GITHUB_BRANCH: "master"
      FLUX_GITHUB_PATH: "clusters/demo"
      FLUX_GITHUB_KEY: "/home/runner/id_rsa_github"

    runs-on: ubuntu-latest
    environment: demo
 
    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash
 
    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v2

    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v1

    - name: Terraform fmt
      id: fmt
      working-directory: ${{ env.TF_ACTIONS_WORKING_DIR }}
      run: terraform fmt -check

    - name: Terraform Init
      id: init
      working-directory: ${{ env.TF_ACTIONS_WORKING_DIR }}
      run: terraform init

    - name: Terraform Validate
      id: validate
      working-directory: ${{ env.TF_ACTIONS_WORKING_DIR }}
      run: terraform validate -no-color

    - name: Terraform Plan
      id: plan
      working-directory: ${{ env.TF_ACTIONS_WORKING_DIR }}
      run: terraform plan -no-color -out=tfplan
 
    - name: Terraform Apply
      if: github.ref == 'refs/heads/master'
      id: apply
      working-directory: ${{ env.TF_ACTIONS_WORKING_DIR }}
      run: terraform apply -no-color tfplan