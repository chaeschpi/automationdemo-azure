name: 'Terraform'
 
on:
  push:
    branches:
    - master
  pull_request:
    types: [assigned, opened, synchronize, reopened]

jobs:
  terraform:
    name: 'Terraform'
    env:
      ARM_CLIENT_ID: ${{ secrets.AZURE_AD_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.AZURE_AD_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.AZURE_AD_TENANT_ID }}
      TF_ACTIONS_WORKING_DIR: "./terraform"

    runs-on: ubuntu-latest
    environment: production
 
    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash
 
    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v2
 
    - name: Create SSH key
      run: |
        mkdir -p ~/.ssh/
        curl -s https://github.com/${{ github.event.repository.owner.name}}.keys | grep 5smpnoQ6PwdcIxdNrFv5g84u > ~/.ssh/id_rsa.pub
        echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
        echo "${{ secrets.SSH_PRIVATE_KEY }}" > id_rsa
        chmod 600 ~/.ssh/id_rsa

    - uses: hashicorp/setup-terraform@v1

    - name: Terraform fmt
      id: fmt
      run: terraform fmt -check
      working-directory: ${{ env.TF_ACTIONS_WORKING_DIR }}

    - name: Terraform Init
      id: init
      run: terraform init
      working-directory: ${{ env.TF_ACTIONS_WORKING_DIR }}

    - name: Terraform Validate
      id: validate
      run: terraform validate -no-color
      working-directory: ${{ env.TF_ACTIONS_WORKING_DIR }}

    - name: Terraform Plan
      id: plan
      run: terraform plan -no-color -out=tfplan
      working-directory: ${{ env.TF_ACTIONS_WORKING_DIR }}
 
    - name: Terraform Apply
      if: github.ref == 'refs/heads/master'
      id: apply
      run: terraform apply -no-color tfplan
      working-directory: ${{ env.TF_ACTIONS_WORKING_DIR }}

    - name: Terraform Output
      if: github.ref == 'refs/heads/master'
      id: output
      run: terraform output > ../tfout.txt
      working-directory: ${{ env.TF_ACTIONS_WORKING_DIR }}

    - name: Copy ouputs to bastion host
      if: github.ref == 'refs/heads/master'
      uses: appleboy/scp-action@master
      with:
        host: "automationdemo-bastion.eastus.cloudapp.azure.com"
        username: "adminuser"
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        source: "id_rsa,tfout.txt"
        target: "./"

    - name: Set up bastion host
      run: |
        pwd
        bastion="automationdemo-bastion.eastus.cloudapp.azure.com"
        ssh-keyscan -H ${bastion} > ~/.ssh/known_hosts
        ssh -i id_rsa adminuser@${bastion} "mv ~/id_rsa ~/.ssh/id_rsa; chmod 600 ~/.ssh/id_rsa"

    # - run: echo "${{ steps.apply.outputs.stdout }}"
    # - run: echo "${{ steps.apply.outputs.stderr }}"
    # - run: echo "${{ steps.apply.outputs.exitcode }}"