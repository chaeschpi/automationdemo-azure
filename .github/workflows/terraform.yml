name: 'Terraform'
 
on:
  push:
    branches:
    - master
  pull_request:
    types: [assigned, opened, synchronize, reopened]

jobs:
  terraform:
    name: 'Terraform'
    env:
      ARM_CLIENT_ID: ${{ secrets.AZURE_AD_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.AZURE_AD_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.AZURE_AD_TENANT_ID }}
      TF_ACTIONS_WORKING_DIR: "./terraform"

    runs-on: ubuntu-latest
    environment: production
 
    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash
        working-directory: ${{ env.TF_ACTIONS_WORKING_DIR }}
 
    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v2
 
    - name: Get SSH public key
      run: curl -s https://github.com/${{ github.event.repository.owner.name}}.keys | grep vKESkcuQ > ./id_rsa.pub

    - name: Get SSH private key
      run: echo "${{ secrets.SSH_PRIVATE_KEY }}" > ./id_rsa; sed -i -e 's/^/     /' ./id_rsa; sed -i -e '/    content:/r ./id_rsa' ../scripts/master-cloud-init.txt

    - uses: hashicorp/setup-terraform@v1

    - name: Terraform fmt
      id: fmt
      run: terraform fmt -check

    - name: Terraform Init
      id: init
      run: terraform init

    - name: Terraform Validate
      id: validate
      run: terraform validate -no-color

    - name: Terraform Plan
      id: plan
      run: terraform plan -no-color
 
    - name: Terraform Apply
      if: github.ref == 'refs/heads/master'
      id: apply
      run: terraform apply -no-color

    - run: echo ${{ steps.apply.outputs.stdout }}
    - run: echo ${{ steps.apply.outputs.stderr }}
    - run: echo ${{ steps.apply.outputs.exitcode }}